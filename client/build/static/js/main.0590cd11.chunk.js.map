{"version":3,"sources":["components/deleteConfirmation.jsx","components/newSession.jsx","components/attendence.jsx","components/ingredientForm.jsx","components/itemList.jsx","App.js","serviceWorker.js","index.js"],"names":["DeleteModal","deleteItemName","deleteFunction","useState","show","setShow","toggleShow","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","Footer","Session","props","values","te","host","setHost","Date","date","setDate","className","undefined","session","axios","delete","id","then","res","console","log","catch","e","setSession","data-enable-time","value","onChange","active","target","name","kj","isactive","post","data","Attendence","attending","setAttending","names","setNames","useEffect","get","map","attendee","key","Form","Text","Control","preventDefault","split","forEach","going","IngredientForm","ingredient","index","update","setName","ItemList","listType","items","setItems","label","setLabel","ingredients","setIngredients","openModal","setOpenModal","handleSubmit","item","foodstuff","submitIngredients","toggleModal","i","addIngredient","assigned","complete","updateIngredients","newIngredient","newArray","Group","filter","Label","type","placeholder","App","pop","pickedDate","toDateString","toLocaleTimeString","style","styles","foodForm","CurrentSession","width","display","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0590cd11.chunk.js","sourcesContent":["import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\"\nimport { useState } from \"react\";\n\nconst DeleteModal = ({ deleteItemName, deleteFunction }) => {\n  const [show, setShow] = useState(false);\n\n  const toggleShow = () => setShow(!show);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={toggleShow}>\n        Delete {deleteItemName}\n      </Button>\n      <Modal show={show} onHide={toggleShow}>\n          <Modal.Header closeButton>\n            <Modal.Title>Delete Confirmation</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <p>Are you Sure you want to Delete {deleteItemName}?</p>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={toggleShow}>Cancel</Button>\n            <Button variant=\"primary\" onClick={deleteFunction}>\n              Delete\n            </Button>\n          </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default DeleteModal;\n","import React, { useState } from \"react\";\nimport Datetime from \"react-datetime\";\nimport axios from \"axios\";\nimport DeleteModal from \"./deleteConfirmation\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_green.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./newSession.scss\";\n\nconst Session = props => {\n  // const [openModal, setOpenModal] = useState(true);\n  const [host, setHost] = useState(values.te);\n  const [date, setDate] = useState(new Date());\n\n  // const toggleModal = () => {\n  //   setOpenModal(!openModal);\n  // };\n\n  const deleteSession = () => {\n    axios\n      .delete(`/api/sessions/${props.session.id}`)\n      .then(res => {\n        console.log(res);\n      })\n      .catch(e => console.log(e));\n\n    props.setSession();\n  };\n\n  const handleSubmit = e => {\n    axios\n      .post(\"api/sessions\", { host, date })\n      .then(res => {\n        console.log(res);\n        props.setSession({ id: res.data.id, date: res.data.date, host });\n        setDate(new Date());\n        setHost(\"\");\n        // setOpenModal(false);\n      })\n      .catch(e => console.log(e));\n  };\n\n  return (\n    <div className=\"new-session\">\n      {props.session === undefined ? null : (\n        <DeleteModal\n          deleteItemName=\"This Session\"\n          deleteFunction={deleteSession}\n        >\n          Delete Session\n        </DeleteModal>\n      )}\n\n      <div>\n        <div className=\"header\">\n          <h1>Create New Whiskey Night</h1>\n        </div>\n        <Flatpickr\n          data-enable-time\n          value={date}\n          onChange={date => {\n            setDate(date);\n          }}\n        />\n        {/* <Datetime onChange={date => setDate(date)} value={date} className=\"datetime\"/> */}\n        <div className=\"button-container\">\n          <button\n            className={`leftmost ${host === values.te ? \"active\" : \"\"}`}\n            active={values.te}\n            onClick={e => setHost(e.target.name)}\n            name={values.te}\n          >\n            {values.te}\n          </button>\n          <button\n            className={`rightmost ${host === values.kj ? \"active\" : \"\"}`}\n            isactive={host === values.kj ? values.kj : null}\n            onClick={e => setHost(e.target.name)}\n            name={values.kj}\n          >\n            {values.kj}\n          </button>\n        </div>\n\n        <button onClick={handleSubmit} className=\"button\" id=\"submit\">\n          Create New\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Session;\n\nconst values = {\n  te: \"Tyler and Emily's\",\n  kj: \"Kevin and Jill's\"\n};\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nconst Attendence = ({ id }) => {\n  const [show, setShow] = useState(false);\n  const [attending, setAttending] = useState([]);\n  const [names, setNames] = useState(\"\");\n\n  const toggleShow = () => setShow(!show);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const nameArr = names.split(\",\");\n    nameArr.forEach(name =>\n      axios\n        .post(`/api/sessions/${id}/attendees`, {name, going: true}\n        )\n        .then(res => {\n          setNames(\"\");\n          toggleShow()\n          console.log(res);\n        })\n        .catch(e => console.log(e))\n    );\n  };\n  const handleChange = e => {\n    e.preventDefault()\n    setNames(e.target.value);\n  };\n\n  const attendenceList = () =>\n    attending.map(attendee => <div key={attendee.id}>{attendee.name}</div>);\n\n  useEffect(() => {\n    if(id === undefined) {\n      //do nothing\n    }else {\n    axios\n      .get(`/api/sessions/${id}/attendees`)\n      .then(res => setAttending(res.data))\n      .catch(e => console.log(e));\n    }\n  }, [show, id]);\n  return (\n    <>\n      {attendenceList()}\n      <Button onClick={toggleShow}>GOING</Button>\n      <Modal show={show} onHide={toggleShow}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            <Form.Text>Who is Attending?(Seperate with Commas)</Form.Text>\n            <Form.Control value={names} onChange={handleChange}></Form.Control>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={toggleShow}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleSubmit}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport default Attendence;\n","import React, {useState} from 'react'\nimport Form from \"react-bootstrap/Form\"\n\n\nconst IngredientForm = ({ingredient, index, update}) => {\n  const [name, setName] = useState('')\n\n  const handleChange = (e) => {\n    setName(e.target.value)\n    ingredient.name = name\n    update(ingredient, index)\n  }\n\n\n  return (\n    <>\n      <Form.Control\n        value={name}\n        onChange={handleChange}\n      />\n    </>\n  );\n}\n\nexport default IngredientForm","import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport axios from \"axios\";\nimport IngredientForm from \"./ingredientForm\";\n\nconst ItemList = ({ id, listType }) => {\n  const [items, setItems] = useState([]);\n  const [label, setLabel] = useState(\"\");\n  const [ingredients, setIngredients] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleSubmit = () => {\n    const item = { label, foodstuff: listType };\n    axios\n      .post(`/api/sessions/${id}/items`, item)\n      .then(res => {\n        submitIngredients(res.data.id);\n      })\n      .catch(e => console.log(e));\n\n    //close modal\n    toggleModal();\n    //clear the modal info after pushing to Database\n    setLabel(\"\");\n  };\n\n  const submitIngredients = id => {\n    ingredients.forEach(i => {\n      console.log(i);\n      axios\n        .post(`/api/items/${id}/ingredients`, i)\n        .then(res => console.log(res))\n        .catch(e => console.log(e));\n    });\n  };\n\n  const addItem = () => (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>Add {listType}</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"label\"\n            placeholder=\"babaganoosh or something\"\n            value={label}\n            onChange={e => {\n              setLabel(e.target.value);\n            }}\n          />\n          <Form.Label>Ingredients</Form.Label>\n          <Button onClick={addIngredient}>Add Ingredient</Button>\n          {ingredients.map((ingredient, index) => (\n            <IngredientForm\n              key={ingredient + index}\n              ingredient={ingredient}\n              index={index}\n              update={updateIngredients}\n            />\n          ))}\n        </Form>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={toggleModal}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={handleSubmit}>\n          Save changes\n        </Button>\n      </Modal.Footer>\n    </>\n  );\n\n  const toggleModal = () => {\n    setOpenModal(!openModal);\n  };\n\n  const addIngredient = () => {\n    setIngredients([\n      ...ingredients,\n      { name: \"\", assigned: \"\", complete: false }\n    ]);\n  };\n\n  const updateIngredients = (newIngredient, i) => {\n    const newArray = ingredients.map((ingredient, index) => {\n      if (index === i) {\n        return newIngredient;\n      } else {\n        return ingredient;\n      }\n    });\n    setIngredients(newArray);\n  };\n\n  useEffect(() => {\n    if (id === undefined) {\n      //do nothing\n    } else {\n      axios\n        .get(`/api/sessions/${id}/items`)\n        .then(res => setItems(res.data))\n        .catch(e => console.log(e));\n    }\n  }, [id]);\n\n\n\n  const itemsRender = () => {\n    return items\n      .filter(item => {\n        //filter for matching marker\n        if (item.foodstuff === listType) {\n          return item;\n        }\n      })\n      .map((item, index) => {\n        //render each of those items\n        return (\n          <div key={item + index}>\n            <Form.Group>\n              {item.label}\n            </Form.Group>\n          </div>\n        );\n      });\n  };\n\n  return (\n    <>\n      <h1>{listType}</h1>\n      <Button onClick={toggleModal}>Add</Button>\n      <Form.Group>{itemsRender()}</Form.Group>\n\n      <Modal show={openModal} onHide={toggleModal}>\n        {addItem()}\n      </Modal>\n    </>\n  );\n};\n\nexport default ItemList;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport NewSession from \"./components/newSession\";\nimport axios from \"axios\";\nimport Attendence from \"./components/attendence\";\nimport ItemList from \"./components/itemList\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction App() {\n  const [session, setSession] = useState({});\n\n  useEffect(() => {\n    axios\n      .get(\"api/sessions\")\n      .then(res => {\n        const session = [...res.data].pop();\n        setSession(session);\n      })\n      .catch(e => console.log(e));\n  }, []);\n\n  const CurrentSession = () => {\n    const pickedDate = new Date(session.date);\n    return (\n      <>\n        <p>{session.host}</p>\n        <div>{pickedDate.toDateString()}</div>\n        <div>{pickedDate.toLocaleTimeString()} </div>\n\n        <Attendence id={session.id} />\n        <Form>\n          <Form.Group style={styles.foodForm}>\n            <ItemList id={session.id} listType=\"food\" />\n          </Form.Group>\n          <Form.Group style={styles.foodForm}>\n            <ItemList id={session.id} listType=\"drinks\" />\n          </Form.Group>\n        </Form>\n      </>\n    );\n  };\n\n  const noSession = () => (\n    <div className=\"no-session\">\n      <div id=\"right-triangle\"></div>\n      <div className=\"left\">\n        <div className=\"diamond medium\" id=\"one\" />\n        <div className=\"diamond medium\" id=\"four\" />\n        <div className=\"diamond small\" id=\"five\" />\n        <div id=\"boxGroupLeft\">\n          <div className=\"diamond large\" id=\"two\" />\n          <div className=\"diamond small\" id=\"three\" />\n        </div>\n      </div>\n      <div className=\"right\">\n        <div className=\"diamond small\" id=\"six\" />\n        <div className=\"diamond medium\" id=\"seven\" />\n        <div className=\"diamond medium-large\" id=\"eight\" />\n        <div className=\"diamond large\" id=\"nine\" />\n        <div className=\"diamond medium\" id=\"ten\" />\n        <div className=\"diamond medium-small\" id=\"eleven\" />\n        <div className=\"diamond medium\" id=\"twelve\" />\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"App\">\n      <NewSession session={session} setSession={setSession} />\n      {session === undefined ? noSession() : CurrentSession()}\n    </div>\n  );\n}\n\nexport default App;\n\nconst styles = {\n  foodForm: {\n    width: \"50%\",\n    display: \"inline-block\"\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}