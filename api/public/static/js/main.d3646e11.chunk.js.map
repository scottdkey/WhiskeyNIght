{"version":3,"sources":["images/check_icon.svg","images/trash_icon.svg","images/map_icon.svg","components/jsx/ingredientForm.jsx","components/jsx/NewItemModal.jsx","components/jsx/DeleteModal.jsx","components/jsx/Checkbox.jsx","components/jsx/BringModal.jsx","components/jsx/ingredientRender.jsx","components/jsx/itemCard.jsx","components/jsx/itemList.jsx","components/jsx/AttendeeFormat.jsx","components/jsx/RSVPModal.jsx","components/jsx/Header.jsx","components/jsx/NoSession.jsx","components/jsx/newSession.jsx","components/jsx/Session.jsx","App.js","components/jsx/hooks.js","serviceWorker.js","index.js"],"names":["module","exports","IngredientForm","ingredient","index","update","ingredients","setIngredients","useState","name","setName","className","onClick","newIngredents","splice","required","value","onChange","e","target","placeholder","NewItemModal","listType","toggle","open","items","setItems","session_id","label","setLabel","closeModal","updateIngredients","newIngredient","i","newArray","map","ing","handleSubmit","a","preventDefault","item","foodstuff","axios","post","res","submitIngredients","data","id","forEach","Modal","show","onClose","onSubmit","title","type","key","assigned","complete","String","fromCharCode","DeleteModal","text","deleteFunction","toggleModal","onHide","Checkbox","checked","src","CheckMark","alt","BringAllModal","toggleShow","useContext","UserContext","user","setUser","names","setNames","useEffect","backdrop","style","textAlign","autoFocus","IngredientRender","item_id","allCompleteCheck","setShow","setIngredient","patch","newIngredients","whichSubmit","get","getIngredient","bringAll","ItemCard","openModal","setOpenModal","showDelete","setShowDelete","setItem","alterItem","payloadObject","length","completedLength","filter","deleteItem","delete","console","log","newItems","bringItem","assignedName","bringAllIngredients","getIngredients","useCallback","sortedIngredients","sort","b","getItem","ItemList","session","getItems","undefined","currentItems","AttendeeFormat","attendee","attending","RSVPModal","setAttendees","then","catch","display","nameArr","split","trim","going","Header","setAttending","SessionContext","setSession","event","moment","date","tz","format","href","host","values","te","teAddress","kjAddress","trashIcon","kj","NoSession","Session","setHost","Date","setDate","data-enable-time","options","disableMobile","defaultMinute","defaultHour","minDate","dateFormat","enableTime","minTime","maxTime","minuteIncrement","active","isactive","location","React","createContext","App","localItem","localStorage","loc","setState","newItem","useLocalState","pop","Provider","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d3646e11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/check_icon.bc5a18f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash_icon.5d5963bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/map_icon.aae9c7f7.svg\";","import React, { useState } from 'react';\n\nconst IngredientForm = ({ ingredient, index, update, ingredients, setIngredients }) => {\n\tconst [ name, setName ] = useState('');\n\n\tconst handleChange = (e) => {\n\t\tsetName(e.target.value);\n\t\tingredient.name = e.target.value;\n\t\tupdate(ingredient, index);\n\t};\n\n\tconst removeIngredient = () => {\n\t\tconst newIngredents = ingredients;\n\t\tnewIngredents.splice(index, 1);\n\t\tsetIngredients([ ...newIngredents ]);\n\t};\n\n\treturn (\n\t\t<div className=\"ingredient-item\">\n\t\t\t<div className=\"symbol lead\" onClick={removeIngredient} />\n\t\t\t<input\n\t\t\t\tclassName=\"ingredient-form\"\n\t\t\t\trequired\n\t\t\t\tvalue={name}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tplaceholder=\"ingredient of the thing\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default IngredientForm;\n","import React, { useState, useEffect } from 'react';\nimport IngredientForm from './ingredientForm';\nimport Modal from 'react-bootstrap/Modal';\nimport axios from 'axios';\nimport '../scss/Modal.scss';\nimport '../scss/NewItemModal.scss';\nimport '../scss/buttonstyles.scss';\n\nconst NewItemModal = ({ listType, toggle, open, items, setItems, session_id }) => {\n\tconst [ label, setLabel ] = useState('');\n\tconst [ ingredients, setIngredients ] = useState([]);\n\n\tconst closeModal = () => {\n\t\tsetLabel('');\n\t\tsetIngredients([]);\n\t\ttoggle();\n\t};\n\n\tconst updateIngredients = (newIngredient, i) => {\n\t\tconst newArray = ingredients.map((ing, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn newIngredient;\n\t\t\t} else {\n\t\t\t\treturn ing;\n\t\t\t}\n\t\t});\n\t\tsetIngredients(newArray);\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconst item = { label, foodstuff: listType };\n\t\tconst res = await axios.post(`/api/sessions/${session_id}/items`, item);\n\n\t\t//seperate function to seperate and submit all ingredients to database\n\t\tsubmitIngredients(res.data.id);\n\n\t\t//don't set items before ingredients have been submitted so card will include all ingredients\n\t\tawait setItems([ ...items, res.data ]);\n\n\t\t//clear and close the modal info after pushing to Database\n\t\tcloseModal();\n\t};\n\n\tconst submitIngredients = (id) => {\n\t\tingredients.forEach((i) => {\n\t\t\taxios.post(`/api/items/${id}/ingredients`, i);\n\t\t});\n\t};\n\n\tconst addIngredient = () => {\n\t\tsetIngredients([ ...ingredients, { name: '', assigned: '', complete: false } ]);\n\t};\n\n\treturn (\n\t\t<Modal show={open} onClose={closeModal} onSubmit={handleSubmit} title={listType}>\n\t\t\t<form className=\"custom-modal\">\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<div className=\"title\">Add {listType}</div>\n\t\t\t\t\t<button className=\"cancel\" type=\"button\" onClick={closeModal} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"body new-item\">\n\t\t\t\t\t<div className=\"items-body\">\n\t\t\t\t\t\t<div className=\"head\">\n\t\t\t\t\t\t\t<div className=\"symbol head-float\" />\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"item-input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"babaganoosh or something\"\n\t\t\t\t\t\t\t\tvalue={label}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\tsetLabel(e.target.value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"ingredient-form-container\">\n\t\t\t\t\t\t\t{ingredients.map((ingredient, index) => (\n\t\t\t\t\t\t\t\t<IngredientForm\n\t\t\t\t\t\t\t\t\tkey={ingredient + index}\n\t\t\t\t\t\t\t\t\tingredient={ingredient}\n\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\tupdate={updateIngredients}\n\t\t\t\t\t\t\t\t\tingredients={ingredients}\n\t\t\t\t\t\t\t\t\tsetIngredients={setIngredients}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"add-ingredient\" onClick={addIngredient}>\n\t\t\t\t\t\t\t<div className=\"symbol filled\">{String.fromCharCode(65291)}</div>\n\t\t\t\t\t\t\t<button type=\"button\" className=\"bttn add-button\">\n\t\t\t\t\t\t\t\tAdd Ingredient\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"footer\">\n\t\t\t\t\t<button className=\"bttn add-item\" type=\"submit\">\n\t\t\t\t\t\tAdd {listType}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</Modal>\n\t);\n};\nexport default NewItemModal;\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport \"../scss/buttonstyles.scss\";\nimport \"../scss/Modal.scss\";\nimport \"../scss/DeleteModal.scss\";\n\nconst DeleteModal = ({ text, deleteFunction, toggleModal, show }) => {\n  const handleSubmit = () => {\n    toggleModal();\n    deleteFunction();\n  };\n\n  return (\n    <Modal show={show} onHide={toggleModal}>\n      <div className=\"custom-modal\">\n        <div className=\"header\">\n          <div className=\"title\">Delete</div>\n          <button className=\"bttn escape\" type=\"button\" onClick={toggleModal} />\n        </div>\n\n        <div className=\"body\">\n            <div className=\"question\">Are you sure you want to delete</div>\n            <h3 className=\"item-name\">{text}</h3>\n        </div>\n\n        <div className=\"footer\">\n          <button className=\"bttn cancel\" onClick={toggleModal}>\n            Cancel\n          </button>\n\n          <button className=\"bttn delete\" onClick={handleSubmit}>\n            Delete\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default DeleteModal;\n","import React from \"react\";\nimport CheckMark from \"../../images/check_icon.svg\";\nimport \"../scss/Checkbox.scss\";\n\nconst Checkbox = ({ checked }) => {\n  const className = checked ? \"checked\" : \"unchecked\";\n\n  return (\n    <>\n      <div className=\"checkbox\">\n        {/* actual checkbox shape */}\n        <div className={className}>\n          {checked ? <img src={CheckMark} alt=\"checkmark\"/> : null}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Checkbox;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { UserContext } from \"../../App\";\nimport \"../scss/BringModal.scss\";\nimport \"../scss/Modal.scss\";\n\nconst BringAllModal = ({ name, toggleShow, handleSubmit, show }) => {\n  const [user, setUser] = useContext(UserContext);\n  const [names, setNames] = useState(\"\");\n\n  const handleChange = e => {\n    setNames(e.target.value);\n  };\n\n  const contextSubmit = e => {\n    e.preventDefault();\n    setUser(names);\n    handleSubmit(names);\n    toggleShow();\n  };\n\n  useEffect(() =>{\n    setNames(user)\n  },[user])\n\n  return (\n    <>\n      <Modal show={show} onHide={toggleShow} backdrop=\"static\">\n        <form className=\"custom-modal\" onSubmit={contextSubmit}>\n          <div className=\"header\">\n            <div className=\"title\">Bringing</div>\n            <button\n              className=\"bttn cancel\"\n              type=\"button\"\n              onClick={toggleShow}\n            />\n          </div>\n          <div className=\"body\">\n            <div className=\"bringing\">\n              <div className=\"question\">Who is bringing {name}?</div>\n              <div className=\"name-input-container\">\n                <input\n                  style={{ textAlign: \"center\" }}\n                  className=\"name-input\"\n                  name=\"bringing-field\"\n                  type=\"text\"\n                  value={names}\n                  onChange={handleChange}\n                  placeholder=\"Name(s)\"\n                  required\n                  autoFocus\n                />\n              </div>\n              <div className=\"name-support\">Supports comma seperated names</div>\n            </div>\n          </div>\n          <div className=\"footer\">\n            <button type=\"submit\" className=\"bttn submit\">\n              Add Name\n            </button>\n          </div>\n        </form>\n      </Modal>\n    </>\n  );\n};\n\nexport default BringAllModal;\n","import React, { useEffect, useState } from 'react';\nimport Checkbox from './Checkbox';\nimport axios from 'axios';\nimport BringModal from './BringModal';\n\nimport '../scss/ItemCard.scss';\n\nconst IngredientRender = ({ item_id, id, allCompleteCheck, ingredients, setIngredients, index }) => {\n\tconst [ show, setShow ] = useState(false);\n\tconst [ ingredient, setIngredient ] = useState({});\n\n\tconst toggleModal = () => {\n\t\tsetShow(!show);\n\t};\n\n\tconst handleSubmit = async (user) => {\n\t\tconst assigned = ingredient.complete ? '' : user;\n\t\tconst res = await axios.patch(`/api/items/${ingredient.item_id}/ingredients/${ingredient.id}`, {\n\t\t\tassigned,\n\t\t\tcomplete: !ingredient.complete\n\t\t});\n\t\tsetIngredient(res.data);\n\t\tconst newIngredients = ingredients;\n\t\tnewIngredients[index] = res.data;\n\t\tsetIngredients(newIngredients);\n\t\tallCompleteCheck(newIngredients);\n\t\tsetShow(false);\n\t};\n\n\tconst whichSubmit = ingredient.complete ? handleSubmit : toggleModal;\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst getIngredient = async () => {\n\t\t\t\tconst res = await axios.get(`/api/items/${item_id}/ingredients/${id}`);\n\t\t\t\tsetIngredient(res.data);\n\t\t\t};\n\t\t\tgetIngredient();\n\t\t},\n\t\t[ item_id, id, ingredients ]\n\t);\n\n\treturn (\n\t\t<div className=\"ingredient\">\n\t\t\t<div className=\"check-area\" onClick={whichSubmit}>\n\t\t\t\t<Checkbox checked={ingredient.complete} />\n\t\t\t\t<div className=\"i-name\">{ingredient.name}</div>\n\t\t\t\t<div className=\"assigned\">{ingredient.assigned}</div>\n\t\t\t</div>\n\n\t\t\t<BringModal\n\t\t\t\tname={ingredient.name}\n\t\t\t\ttoggleShow={toggleModal}\n\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\tshow={show}\n\t\t\t\tbringAll=\"true\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default IngredientRender;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport DeleteModal from './DeleteModal';\nimport IngredientRender from './ingredientRender';\nimport Checkbox from './Checkbox';\nimport '../scss/ItemCard.scss';\nimport '../scss/buttonstyles.scss';\nimport BringModal from './BringModal';\n\nconst ItemCard = ({ item_id, setItems, items, session_id }) => {\n\tconst [ ingredients, setIngredients ] = useState([]);\n\tconst [ openModal, setOpenModal ] = useState(false);\n\tconst [ showDelete, setShowDelete ] = useState(false);\n\tconst [ item, setItem ] = useState({});\n\n\tconst alterItem = async (payloadObject) => {\n\t\tconst res = await axios.patch(`/api/sessions/${session_id}/items/${item_id}`, payloadObject);\n\t\tsetItem(res.data);\n\t};\n\n\tconst allCompleteCheck = () => {\n\t\tconst length = ingredients.length;\n\t\tconst completedLength = ingredients.filter((i) => {\n\t\t\tif (i.complete) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t\treturn null;\n\t\t}).length;\n\t\tif (length === completedLength) {\n\t\t\talterItem({ complete: true });\n\t\t} else {\n\t\t\talterItem({ complete: false });\n\t\t}\n\t};\n\n\tconst deleteItem = async () => {\n\t\t//delete item from database\n\t\tconst res = await axios.delete(`/api/sessions/${item.session_id}/items/${item.id}`);\n\t\tconsole.log(res.data);\n\t\t//Remove this item from items array\n\t\tconst newItems = items.filter((i) => {\n\t\t\treturn i.id !== item.id;\n\t\t});\n\t\tconsole.log(newItems);\n\t\tsetItems(newItems);\n\t};\n\n\tconst bringItem = async (assignedName) => {\n\t\tif (item.complete) {\n\t\t\talterItem({ assigned: '', complete: false });\n\t\t} else {\n\t\t\talterItem({ assigned: assignedName, complete: true });\n\t\t}\n\t\tallCompleteCheck(ingredients);\n\t\tbringAllIngredients(assignedName);\n\t};\n\n\tconst bringAllIngredients = (assignedName) => {\n\t\t//change the values of each object in array\n\t\tconst newIngredients = ingredients.map((ing) => {\n\t\t\t//check if its already complete and hold on to assigned name\n\t\t\tconst assigned = ing.complete ? ing.assigned : assignedName;\n\t\t\ting.assigned = assigned;\n\t\t\ting.complete = true;\n\t\t\treturn ing;\n\t\t});\n\t\t//send new array to state\n\t\tsetIngredients(newIngredients);\n\n\t\t//push array to database\n\t\tnewIngredients.forEach(async (ingredient) => {\n\t\t\tconst res = await axios.patch(`/api/items/${item_id}/ingredients/${ingredient.id}`, {\n\t\t\t\tassigned: ingredient.assigned,\n\t\t\t\tcomplete: ingredient.complete\n\t\t\t});\n\t\t\treturn res;\n\t\t});\n\t\tgetIngredients();\n\t\t//check if the top level should be marked off\n\t\tallCompleteCheck(ingredients);\n\t};\n\n\t//check if item boolean is complete\n\tconst bringItemModal = () => {\n\t\tif (item.complete) {\n\t\t\tbringItem(true);\n\t\t} else {\n\t\t\tsetOpenModal(true);\n\t\t}\n\t};\n\tconst getIngredients = useCallback(\n\t\tasync () => {\n\t\t\tconst res = await axios.get(`/api/items/${item_id}/ingredients/`);\n\t\t\tconst sortedIngredients = res.data.sort((a, b) => a.id - b.id);\n\t\t\tsetIngredients(sortedIngredients);\n\t\t},\n\t\t[ item_id, setIngredients ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst getItem = async () => {\n\t\t\t\tconst res = await axios.get(`/api/sessions/${session_id}/items/${item_id}`);\n\t\t\t\tsetItem(res.data);\n\t\t\t};\n\t\t\tgetItem();\n\t\t\tgetIngredients();\n\t\t},\n\t\t[ item_id, session_id, getIngredients ]\n\t);\n\n\treturn (\n\t\t<div className=\"info-area\">\n\t\t\t<div className=\"head\">\n\t\t\t\t<div onClick={bringItemModal} className=\"clickable-name\">\n\t\t\t\t\t<Checkbox checked={item.complete} />\n\t\t\t\t\t<h3 className=\"name\">{item.label}</h3>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"delete-ingredient\">\n\t\t\t\t\t<BringModal\n\t\t\t\t\t\tname={item.label}\n\t\t\t\t\t\ttoggleShow={() => setOpenModal(!openModal)}\n\t\t\t\t\t\thandleSubmit={bringItem}\n\t\t\t\t\t\tshow={openModal}\n\t\t\t\t\t\tbringAll=\"true\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"bttn ingredient-delete\" onClick={() => setShowDelete(!showDelete)}>\n\t\t\t\t\t\t<div className=\"delete-text\">{String.fromCharCode(8722)}</div>\n\t\t\t\t\t</button>\n\t\t\t\t\t<DeleteModal\n\t\t\t\t\t\tdeleteFunction={deleteItem}\n\t\t\t\t\t\tshow={showDelete}\n\t\t\t\t\t\ttext={item.label}\n\t\t\t\t\t\ttoggleModal={() => setShowDelete(!showDelete)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"body\">\n\t\t\t\t{ingredients.map((i, index) => (\n\t\t\t\t\t<IngredientRender\n\t\t\t\t\t\tkey={i.id + i}\n\t\t\t\t\t\tid={i.id}\n\t\t\t\t\t\titem_id={item_id}\n\t\t\t\t\t\tingredients={ingredients}\n\t\t\t\t\t\tsetIngredients={setIngredients}\n\t\t\t\t\t\tallCompleteCheck={allCompleteCheck}\n\t\t\t\t\t\tindex={index}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ItemCard;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport NewItemModal from './NewItemModal';\nimport ItemCard from './itemCard';\nimport '../scss/buttonstyles.scss';\nimport '../scss/itemList.scss';\n\nconst ItemList = ({ listType, session }) => {\n\tconst [ items, setItems ] = useState([]);\n\tconst [ openModal, setOpenModal ] = useState(false);\n\tconst itemsRender = () =>\n\t\titems.map((item, index) => {\n\t\t\t//render each of those items\n\t\t\treturn (\n\t\t\t\t<ItemCard\n\t\t\t\t\titem_id={item.id}\n\t\t\t\t\tkey={item.id}\n\t\t\t\t\titems={items}\n\t\t\t\t\tsetItems={setItems}\n\t\t\t\t\tsession_id={session.id}\n\t\t\t\t\tindex={index}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\n\tconst getItems = useCallback(\n\t\tasync () => {\n\t\t\tif (session === undefined || null) {\n\t\t\t\t//do nothing\n\t\t\t} else {\n\t\t\t\tconst { id } = session;\n\t\t\t\tconst res = await axios.get(`/api/sessions/${id}/items`);\n\t\t\t\tconst currentItems = res.data\n\t\t\t\t\t.filter((item) => {\n\t\t\t\t\t\t//filter for matching marker\n\t\t\t\t\t\tif (item.foodstuff === listType) {\n\t\t\t\t\t\t\treturn item;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t})\n\t\t\t\t\t.sort((a, b) => a.id > b.id);\n\t\t\t\tsetItems(currentItems);\n\t\t\t}\n\t\t},\n\t\t[ session, listType ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tgetItems();\n\t\t},\n\t\t[ getItems ]\n\t);\n\n\tif (session === undefined) {\n\t\treturn <div>Loading</div>;\n\t} else {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"list-head\">\n\t\t\t\t\t<h2 id=\"list-name\">{listType}</h2>\n\t\t\t\t\t<button onClick={() => setOpenModal(!openModal)} className=\"bttn plus\" />\n\t\t\t\t</div>\n\n\t\t\t\t<div>{itemsRender()}</div>\n\t\t\t\t<NewItemModal\n\t\t\t\t\topen={openModal}\n\t\t\t\t\tlistType={listType}\n\t\t\t\t\ttoggle={() => setOpenModal(!openModal)}\n\t\t\t\t\tsetItems={setItems}\n\t\t\t\t\titems={items}\n\t\t\t\t\tsession_id={session.id}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default ItemList;\n","import React, { useContext } from \"react\";\nimport { UserContext } from \"../../App.js\";\nimport \"../scss/Modal.scss\";\n\nconst AttendeeFormat = ({ attendee, attending }) => {\n  const [user, setUser] = useContext(UserContext);\n\n  const chooseUser = () => {\n    setUser(attendee.name);\n  };\n\n\n  //If this is the last item in array don't have a comma\n  if (attending[attending.length - 1] === attendee) {\n    return (\n      <>\n        <div\n          className=\"attendee\"\n          id={attendee.name === user ? \"selected\" : null}\n          onClick={chooseUser}\n        >\n          {attendee.name}{\" \"}\n        </div>\n      </>\n    );\n    //if this is not the last item have a space and a comma\n  } else {\n    return (\n      <>\n        <div\n          className=\"attendee\"\n          // id={attendee.name === user ? \"selected\" : null}\n          // onClick={chooseUser}\n        >\n          {`${attendee.name}, `}{\" \"}\n        </div>\n      </>\n    );\n  }\n};\n\nexport default AttendeeFormat;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport axios from \"axios\";\nimport { UserContext } from \"../../App\";\nimport \"../scss/buttonstyles.scss\";\nimport \"../scss/Modal.scss\";\nimport \"../scss/RSVPModal.scss\";\n\nconst RSVPModal = ({ id, setAttendees, toggleShow, show }) => {\n  const [user, setUser] = useContext(UserContext);\n  const [names, setNames] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const nameArr = names.split(\",\").map(item => item.trim());\n    setUser(names);\n    nameArr.forEach(name =>\n      axios\n        .post(`/api/sessions/${id}/attendees`, { name, going: true })\n        .then(res => {\n          setNames(\"\");\n          toggleShow();\n          return res;\n        })\n        .catch(e => console.log(e))\n    );\n    setNames(\"\");\n  };\n  const handleChange = e => {\n    // e.preventDefault();\n    setNames(e.target.value);\n  };\n\n  useEffect(() => {\n    if (id === undefined) {\n      //do nothing\n    } else {\n      axios\n        .get(`/api/sessions/${id}/attendees`)\n        .then(res => setAttendees(res.data))\n        .catch(e => console.log(e));\n    }\n  }, [show, id, setAttendees]);\n  return (\n    <>\n    <div style={{display: \"none\"}}>{user}</div>\n      <Modal show={show} onHide={toggleShow}>\n        <form className=\"custom-modal\" onSubmit={handleSubmit}>\n          <div className=\"header\">\n            <div className=\"title\">RSVP</div>\n            <button\n              className=\"bttn cancel\"\n              type=\"button\"\n              onClick={toggleShow}\n            />\n          </div>\n          <div className=\"body\">\n            <div className=\"rsvp-label\">Who is coming?</div>\n            <div className=\"name-input-container\">\n              <input\n                style={{ textAlign: \"center\" }}\n                className=\"name-input\"\n                type=\"text\"\n                value={names}\n                onChange={handleChange}\n                placeholder=\"Name(s)\"\n                required\n                autoFocus\n              />\n            </div>\n            <div className=\"name-support\">Supports comma seperated names</div>\n          </div>\n          <div className=\"footer\">\n            <button className=\"bttn add-name\" type=\"submit\">\n              Add Name\n            </button>\n          </div>\n        </form>\n      </Modal>\n    </>\n  );\n};\n\nexport default RSVPModal;\n","import React, { useState, useContext } from 'react';\nimport { SessionContext } from '../../App';\nimport DeleteModal from './DeleteModal';\nimport axios from 'axios';\nimport AttendeeFormat from './AttendeeFormat';\nimport moment from 'moment';\nimport 'moment-timezone';\nimport '../scss/Header.scss';\nimport '../scss/buttonstyles.scss';\nimport RSVPModal from './RSVPModal';\nimport trashIcon from '../../images/trash_icon.svg';\nimport map from '../../images/map_icon.svg';\n\nconst Header = () => {\n\tconst [ show, setShow ] = useState(false);\n\tconst [ showDelete, setShowDelete ] = useState(false);\n\tconst [ attending, setAttending ] = useState([]);\n\tconst [ session, setSession ] = useContext(SessionContext);\n\n\tconst event = moment(session.date).tz('America/Boise').format('MMM Do, h a');\n\n\tconst deleteSession = () => {\n\t\taxios.delete(`/api/sessions/${session.id}`).catch((e) => console.log(e));\n\t\tsetSession();\n\t};\n\n\tconst toggleShow = () => {\n\t\tsetShow(!show);\n\t};\n\n\treturn (\n\t\t<div className=\"main-header\">\n\t\t\t<div className=\"shape\" />\n\t\t\t<div className=\"sub-header\">\n\t\t\t\t<div className=\"event\">\n\t\t\t\t\t<div className=\"date\">{event}</div>\n\t\t\t\t\t<a href={session.host === values.te ? values.teAddress : values.kjAddress} className=\"host\" target=\"_blank\">\n\t\t\t\t\t\t<div className=\"name\">{session.host}</div>\n\t\t\t\t\t\t<img src={map} className=\"image\" alt=\"map Icon\" />\n\t\t\t\t\t</a>\n\t\t\t\t\t<div id=\"count\">\n\t\t\t\t\t\t{attending.length} {attending.length === 1 ? 'Person' : 'People'}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"attendees\">\n\t\t\t\t\t\t{attending.map((attendee) => (\n\t\t\t\t\t\t\t<AttendeeFormat attendee={attendee} attending={attending} key={attendee.id} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button className=\"bttn rsvp button-position\" onClick={toggleShow}>\n\t\t\t\t\t\t\tRSVP\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"delete-area\">\n\t\t\t\t\t<button className=\"bttn delete-button\" onClick={() => setShowDelete(true)}>\n\t\t\t\t\t\t{/* <div className=\"delete-text\">Delete Event</div> */}\n\t\t\t\t\t\t<img className=\"trash-icon\" src={trashIcon} alt=\"trash can\" />\n\t\t\t\t\t</button>\n\t\t\t\t\t<DeleteModal\n\t\t\t\t\t\ttext=\"Event\"\n\t\t\t\t\t\tdeleteFunction={deleteSession}\n\t\t\t\t\t\tshow={showDelete}\n\t\t\t\t\t\ttoggleModal={() => setShowDelete(!showDelete)}\n\t\t\t\t\t/>\n\t\t\t\t\t<RSVPModal id={session.id} setAttendees={setAttending} show={show} toggleShow={toggleShow} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Header;\n\nconst values = {\n\tte: \"Tyler & Emily's\",\n\tkj: \"Kevin & Jill's\",\n\tteAddress: 'https://goo.gl/maps/WmDQQmAaPaj8HLiC7',\n\tkjAddress: 'https://goo.gl/maps/NzJXuMZ4XMjdh7es7'\n};\n","import React from \"react\";\nimport \"../scss/NoSession.scss\";\n\nconst NoSession = () => (\n  <div className=\"no-session\">\n    <div id=\"right-triangle\" />\n    <div className=\"diamond medium-large\" id=\"one\" />\n    <div className=\"diamond x-small\" id=\"two\" />\n    <div className=\"diamond medium-small\" id=\"three\" />\n    <div className=\"diamond x-small\" id=\"four\" />\n    <div className=\"diamond small\" id=\"five\" />\n    <div className=\"diamond small\" id=\"six\" />\n    <div className=\"diamond medium\" id=\"seven\" />\n    <div className=\"diamond large\" id=\"eight\" />\n    <div className=\"diamond medium-small\" id=\"nine\" />\n    <div className=\"diamond small\" id=\"ten\" />\n    <div className=\"diamond medium-small\" id=\"eleven\" />\n    <div className=\"diamond x-small\" id=\"twelve\" />\n  </div>\n);\n\nexport default NoSession;\n","import React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport Flatpickr from 'react-flatpickr';\nimport { SessionContext } from '../../App';\nimport 'flatpickr/dist/themes/material_green.css';\nimport '../scss/buttonstyles.scss';\nimport '../scss/newSession.scss';\n\nconst Session = () => {\n\tconst [ host, setHost ] = useState(values.te);\n\tconst [ date, setDate ] = useState(new Date());\n\tconst [ session, setSession ] = useContext(SessionContext);\n\n\tconst handleSubmit = (e) => {\n\t\tconst location = host === values.te ? values.teAddress : values.kjAddress;\n\t\te.preventDefault();\n\t\taxios\n\t\t\t.post('api/sessions', { host, date })\n\t\t\t.then((res) => {\n\t\t\t\tsetSession({ id: res.data.id, date, host, location });\n\t\t\t\tsetDate(new Date());\n\t\t\t\tsetHost('');\n\t\t\t})\n\t\t\t.catch((e) => console.log(e));\n\t};\n\n\treturn (\n\t\t<div className=\"new-session\">\n\t\t\t<div style={{ display: 'none' }}>{session}</div>\n\t\t\t<div>\n\t\t\t\t<div className=\"header\">Create New Whiskey Night</div>\n\t\t\t\t<div className=\"date-area\">\n\t\t\t\t\t<Flatpickr\n\t\t\t\t\t\tclassName=\"picker\"\n\t\t\t\t\t\tdata-enable-time\n\t\t\t\t\t\tvalue={date}\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\tdisableMobile: true,\n\t\t\t\t\t\t\tdefaultMinute: 0,\n\t\t\t\t\t\t\tdefaultHour: 16,\n\t\t\t\t\t\t\tminDate: 'today',\n\t\t\t\t\t\t\tdateFormat: 'F J\\\\, h K',\n\t\t\t\t\t\t\tenableTime: true,\n\t\t\t\t\t\t\tminTime: '16:00',\n\t\t\t\t\t\t\tmaxTime: '22:00',\n\t\t\t\t\t\t\tminuteIncrement: '60'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={(date) => {\n\t\t\t\t\t\t\tsetDate(...date);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"info\">Pick Date</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"button-container\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={`bttn host left-host ${host === values.te ? 'active' : ''}`}\n\t\t\t\t\t\tactive={values.te}\n\t\t\t\t\t\tonClick={(e) => setHost(e.target.name)}\n\t\t\t\t\t\tname={values.te}\n\t\t\t\t\t>\n\t\t\t\t\t\t{values.te}\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={`bttn host right-host ${host === values.kj ? 'active' : ''}`}\n\t\t\t\t\t\tisactive={host === values.kj ? values.kj : null}\n\t\t\t\t\t\tonClick={(e) => setHost(e.target.name)}\n\t\t\t\t\t\tname={values.kj}\n\t\t\t\t\t>\n\t\t\t\t\t\t{values.kj}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"create-new\">\n\t\t\t\t\t<button onClick={handleSubmit} className=\"bttn submit\">\n\t\t\t\t\t\tCreate New\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Session;\n\nconst values = {\n\tte: \"Tyler & Emily's\",\n\tkj: \"Kevin & Jill's\",\n\tteAddress: 'https://goo.gl/maps/WmDQQmAaPaj8HLiC7',\n\tkjAddress: 'https://goo.gl/maps/NzJXuMZ4XMjdh7es7'\n};\n","import React, { useContext } from \"react\";\nimport ItemList from \"./itemList\";\nimport Header from \"./Header\";\nimport NoSession from \"./NoSession\";\nimport NewSession from \"./newSession\"\nimport { SessionContext } from \"../../App\";\nimport \"../scss/Session.scss\";\n\nconst Session = () => {\n  const [session] = useContext(SessionContext);\n  if (session === undefined) {\n    return (\n      <>\n        <NewSession />\n        <NoSession />\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Header/>\n        <div className=\"content-container\">\n          <div className=\"offset\">\n            <ItemList session={session} listType=\"Food\" />\n          </div>\n          <div>\n            <ItemList session={session} listType=\"Drinks\" />\n          </div>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default Session;\n","import React, { useState, useEffect } from \"react\";\nimport \"../src/components/scss/App.scss\";\nimport axios from \"axios\";\nimport { useLocalState } from \"./components/jsx/hooks\";\nimport Session from \"./components/jsx/Session\";\n\nexport const UserContext = React.createContext();\nexport const SessionContext = React.createContext();\n\nfunction App() {\n  const [session, setSession] = useState({});\n  const [user, setUser] = useLocalState(\"user\");\n\n  useEffect(() => {\n    axios\n      .get(\"api/sessions\")\n      .then(res => {\n        const session = [...res.data].pop();\n        setSession(session);\n      })\n      .catch(e => console.log(e));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <SessionContext.Provider value={[session, setSession]}>\n        <UserContext.Provider value={[user, setUser]}>\n          <Session />\n        </UserContext.Provider>\n      </SessionContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import {useState} from 'react'\n\n\nexport function useLocalState(localItem) {\n  const [loc, setState] = useState(localStorage.getItem(localItem));\n  function setLoc(newItem) {\n    localStorage.setItem(localItem, newItem);\n    setState(newItem);\n  }\n  return [loc, setLoc];\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}